name: lint

on:
  [push]

jobs:
  lint:
    name: "Selene lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Aftman
        uses: ok-nick/setup-aftman@v0.4.2
      - name: Run Selene
        run: selene src
  build_docs:
    name: Build docs
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm i -g moonwave@latest
      - name: Build
        run: |
          moonwave build
  publish_packages:
    name: "Package publish"
    needs: [lint]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v4
        with:
          # Ensure that git uses your token with admin access to the repo
          token: ${{ secrets.ADMIN_TOKEN }}

      - name: Prepare repository
        # Fetch full git history and tags
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git fetch --unshallow --tags

      - name: Use Node.js 20.x
        uses: actions/setup-node@v1
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com"
          scope: "@supersocial"

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx auto shipit
